ISSUE_INFO
superset
v1.3
16543
intgr
2021-09-01T11:51:42Z
2023-04-05T22:46:58Z
not_pull_request
#bug,v1.3,
BEGIN_ISSUE
When creating a chart and adding multiple "custom SQL" metrics, the frontend seems to truncate them to generate the label. If this truncated label is not unique, then only one of the several metrics will be displayed.

I frequently create multiple metrics like:
```sql
SUM(vaccinations) FILTER (WHERE agegroup<=17)
SUM(vaccinations) FILTER (WHERE agegroup BETWEEN 18 AND 39)
SUM(vaccinations) FILTER (WHERE agegroup BETWEEN 40 AND 59)
SUM(vaccinations) FILTER (WHERE agegroup>=60)
```
All of these will have the same generated label `SUM(vaccinations) FILTER (WHERE agegroup...`

### Workaround

Manually adding distinct labels solves this issue. That's a good idea in any case, but a bit extra work when prototyping.

### Expected results

If I add multiple metrics, I want to see multiple metrics in the resulting graph.

### Actual results

Only one of many metrics is displayed.

#### Screenshots

![image](https://user-images.githubusercontent.com/137616/131665196-b834d0c6-0180-4717-b474-d489da7ffece.png)

#### How to reproduce the bug

1. Create new chart.
2. Add multiple "custom SQL" metrics with identical first 40 characters.
3. Run

### Environment

(please complete the following information):

- superset version: 0.0.0dev; git hash 80c39daa85c9be9e66a2e3cf2c9e2a8e5a74a8d6
- python version: 3.9.6
- node.js version: 16.8.0
- any feature flags active: (no, using default config)

### Checklist

Make sure to follow these steps before submitting your issue - thank you!

- [x] I have checked the superset logs for python stacktraces and included it here as text if there are any.
- [x] I have reproduced the issue with at least the latest released version of superset.
- [x] I have checked the issue tracker for the same issue and I haven't found one similar.

COMMENT_INFO
intgr
2021-09-01T11:51:42Z
BEGIN_COMMENT
I tried to fix this myself, but could not identify the part of code where this "deduplication" of metrics happens.

It seems it's in the frontend somewhere, since only one metric is in the "chart data" request.

If someone has pointers, I'll gladly try to fix it myself and open a PR.

COMMENT_INFO
villebro
2021-09-01T11:51:42Z
BEGIN_COMMENT
Thanks for flagging @intgr! Tested and reproduced, so this is indeed a bug/regression. I chcked that the request is using untruncated labels, so truncation is happening in the backend. Let me dig where this is happening so you can see if you want to take a stab at fixing it.
COMMENT_INFO
villebro
2021-09-01T11:51:42Z
BEGIN_COMMENT
I take that back: the label is incorrectly set by the metric popover: 
![image](https://user-images.githubusercontent.com/33317356/131675679-258ff2fc-a411-42dd-9e79-9b69bbf30f86.png)

COMMENT_INFO
villebro
2021-09-01T11:51:42Z
BEGIN_COMMENT
This is happening here: https://github.com/apache/superset/blob/80c39daa85c9be9e66a2e3cf2c9e2a8e5a74a8d6/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilter/index.js#L182

The correct behavior should be to not physically truncate the label, but to visually handle the overflow with ellipsis. So the appearance should be unchanged like this:
![image](https://user-images.githubusercontent.com/33317356/131677214-3847524a-e87d-4d55-aa49-ae4ad260b3a4.png)

with the label value being untruncated (currently this widens very uglily when exceeding 43 chars):
![image](https://user-images.githubusercontent.com/33317356/131677024-eb28aae7-649c-40e1-aefa-19c26c62d32d.png)

COMMENT_INFO
intgr
2021-09-01T11:51:42Z
BEGIN_COMMENT
Ah, I saw that truncation code, but I assumed that was intentional and the fix should be done somewhere else.

I'll give it a shot, thanks.
COMMENT_INFO
villebro
2021-09-01T11:51:42Z
BEGIN_COMMENT
FYI @intgr, I know @geido has done some great related work, so you can check his PRs or potentially reach out to him for guidance.
COMMENT_INFO
stale[bot]
2021-09-01T11:51:42Z
BEGIN_COMMENT
This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions. For admin, please label this issue `.pinned` to prevent stale bot from closing the issue.

COMMENT_INFO
rumbin
2021-09-01T11:51:42Z
BEGIN_COMMENT
This issue should not be closed by the stale bot, in my eyes.
COMMENT_INFO
rusackas
2021-09-01T11:51:42Z
BEGIN_COMMENT
Wondering if anyone really wants to keep this open for two reasons:
1) It's again been roughly a year since the last comment
2) I/we haven't heard any outcry about this being a major problem
3) It's right on the line between a bug and a feature request.

I'm going to just close it as stale, but we can re-open if anyone feels strongly ¯\\\_(ツ)_/¯ 
